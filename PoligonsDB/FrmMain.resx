<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>